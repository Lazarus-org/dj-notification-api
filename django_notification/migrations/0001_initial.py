# Generated by Django 4.2 on 2024-09-13 20:36

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("contenttypes", "0002_remove_content_type_name"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="Notification",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "verb",
                    models.CharField(
                        help_text="The action verb associated with the notification, e.g., 'liked', 'commented'.",
                        max_length=127,
                        verbose_name="Verb",
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True,
                        help_text="The description of the notification.",
                        max_length=512,
                        null=True,
                        verbose_name="Description",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            (
                                "ERROR",
                                "Error - Indicates critical errors that require immediate attention",
                            ),
                            (
                                "SUCCESS",
                                "Success - Indicates successful completion of an operation",
                            ),
                            (
                                "WARNING",
                                "Warning - Indicates potential issues or concerns that should be addressed",
                            ),
                            (
                                "INFO",
                                "Information - Provides general informational messages",
                            ),
                            (
                                "CRITICAL",
                                "Critical - Indicates critical issues that may impact functionality",
                            ),
                            (
                                "SENSITIVE",
                                "Sensitive - Indicates notifications related to sensitive data",
                            ),
                            (
                                "INFRASTRUCTURE",
                                "Infrastructure - Indicates notifications related to system infrastructure",
                            ),
                        ],
                        default="INFO",
                        help_text="The current status of the notification.",
                        max_length=15,
                        verbose_name="Status",
                    ),
                ),
                (
                    "actor_object_id",
                    models.PositiveIntegerField(
                        help_text="The ID of the actor object.",
                        verbose_name="Actor object ID",
                    ),
                ),
                (
                    "target_object_id",
                    models.PositiveIntegerField(
                        blank=True,
                        help_text="The ID of the target object.",
                        null=True,
                        verbose_name="Target object ID",
                    ),
                ),
                (
                    "action_object_object_id",
                    models.PositiveIntegerField(
                        blank=True,
                        help_text="The ID of the action object.",
                        null=True,
                        verbose_name="Action object ID",
                    ),
                ),
                (
                    "link",
                    models.URLField(
                        blank=True,
                        help_text="A URL associated with the action.",
                        null=True,
                        verbose_name="Link",
                    ),
                ),
                (
                    "is_sent",
                    models.BooleanField(
                        default=False,
                        help_text="indicate whether the notification has been sent.",
                        verbose_name="Is sent",
                    ),
                ),
                (
                    "public",
                    models.BooleanField(
                        default=True,
                        help_text="Indicate whether the notification is public.",
                        verbose_name="Public",
                    ),
                ),
                (
                    "data",
                    models.JSONField(
                        blank=True,
                        help_text="Additional metadata or custom attributes in JSON format.",
                        null=True,
                        verbose_name="data",
                    ),
                ),
                (
                    "timestamp",
                    models.DateTimeField(
                        db_index=True,
                        default=django.utils.timezone.now,
                        help_text="The time when the notification was created.",
                        verbose_name="Timestamp",
                    ),
                ),
                (
                    "action_object_content_type",
                    models.ForeignKey(
                        blank=True,
                        help_text="The content type of the action object.",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="action_content_type_notifications",
                        to="contenttypes.contenttype",
                        verbose_name="Action object ContentType",
                    ),
                ),
                (
                    "actor_content_type",
                    models.ForeignKey(
                        help_text="The content type of the actor object.",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="actor_content_type_notifications",
                        to="contenttypes.contenttype",
                        verbose_name="Actor ContentType",
                    ),
                ),
                (
                    "group",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups that will receive the notification.",
                        to="auth.group",
                        verbose_name="Group",
                    ),
                ),
            ],
            options={
                "verbose_name": "Notification",
                "verbose_name_plural": "Notifications",
                "db_table": "notification",
                "ordering": ("-timestamp",),
            },
        ),
        migrations.CreateModel(
            name="NotificationSeen",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "seen_at",
                    models.DateTimeField(
                        default=django.utils.timezone.now,
                        help_text="The time that the notification was seen.",
                        verbose_name="Seen at",
                    ),
                ),
                (
                    "notification",
                    models.ForeignKey(
                        help_text="The notification that was seen.",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="seen",
                        to="django_notification.notification",
                        verbose_name="Notification",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        help_text="The recipient or a group member who has seen the notification.",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="seen_notifications",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="User",
                    ),
                ),
            ],
            options={
                "verbose_name": "Notification Seen",
                "verbose_name_plural": "Notifications Seen",
                "db_table": "notification_seen",
                "ordering": ("-seen_at",),
            },
        ),
        migrations.CreateModel(
            name="NotificationRecipient",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "notification",
                    models.ForeignKey(
                        help_text="The notification that is being sent.",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="notification_recipients",
                        to="django_notification.notification",
                        verbose_name="Notification",
                    ),
                ),
                (
                    "recipient",
                    models.ForeignKey(
                        help_text="The user who will receive the notification.",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="received_notifications",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Recipient",
                    ),
                ),
            ],
            options={
                "verbose_name": "Notification Recipient",
                "verbose_name_plural": "Notification Recipients",
                "db_table": "notification_recipient",
            },
        ),
        migrations.AddField(
            model_name="notification",
            name="recipient",
            field=models.ManyToManyField(
                blank=True,
                help_text="The users who will receive the notification.",
                related_name="notifications",
                through="django_notification.NotificationRecipient",
                to=settings.AUTH_USER_MODEL,
                verbose_name="Recipient",
            ),
        ),
        migrations.AddField(
            model_name="notification",
            name="seen_by",
            field=models.ManyToManyField(
                help_text="Users who have seen the notification.",
                through="django_notification.NotificationSeen",
                to=settings.AUTH_USER_MODEL,
                verbose_name="Seen by",
            ),
        ),
        migrations.AddField(
            model_name="notification",
            name="target_content_type",
            field=models.ForeignKey(
                blank=True,
                help_text="The content type of the target object.",
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="target_content_type_notifications",
                to="contenttypes.contenttype",
                verbose_name="Target ContentType",
            ),
        ),
        migrations.CreateModel(
            name="DeletedNotification",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "deleted_at",
                    models.DateTimeField(
                        default=django.utils.timezone.now,
                        help_text="The time when the notification was deleted.",
                        verbose_name="Deleted at",
                    ),
                ),
                (
                    "notification",
                    models.ForeignKey(
                        help_text="The notification that was deleted.",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="deleted",
                        to="django_notification.notification",
                        verbose_name="Notification",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        help_text="The user who deleted the notification.",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="deleted_notifications",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="User",
                    ),
                ),
            ],
            options={
                "verbose_name": "Deleted Notification",
                "verbose_name_plural": "Deleted Notifications",
                "db_table": "deleted_notifications",
            },
        ),
        migrations.AddIndex(
            model_name="notificationseen",
            index=models.Index(
                fields=["notification", "user"], name="notification_seen_user_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="notificationseen",
            unique_together={("notification", "user")},
        ),
        migrations.AddIndex(
            model_name="notificationrecipient",
            index=models.Index(
                fields=["notification", "recipient"], name="notification_recipient_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="notificationrecipient",
            unique_together={("recipient", "notification")},
        ),
        migrations.AddIndex(
            model_name="deletednotification",
            index=models.Index(
                fields=["notification", "user"], name="deleted_notification_user_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="deletednotification",
            unique_together={("user", "notification")},
        ),
    ]

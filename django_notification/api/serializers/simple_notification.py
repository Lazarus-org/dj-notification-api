from typing import Any, Dict

from rest_framework.serializers import ModelSerializer, SerializerMethodField

from django_notification.models.notification import Notification
from django_notification.settings.conf import config
from django_notification.utils.serialization import (
    filter_non_empty_fields,
    generate_title,
)


class SimpleNotificationSerializer(ModelSerializer):
    """Serializer for `Notification` model to provide a simplified
    representation.

    This serializer includes a custom `title` field generated by the `generate_title` function.
    It also filters out empty fields from the serialized output.

    Fields:
        id (int): The unique identifier of the notification.
        title (str): The title of the notification, generated dynamically.
        status (str): The status of the notification.
        link (str): The link associated with the notification.
        timestamp (datetime): The timestamp when the notification was created.

    Methods:
        get_title(notification: Notification) -> str:
            Generates and returns the title for the notification.
        to_representation(instance: Dict[str, str]) -> dict:
            Serializes the `Notification` dict and filters out empty fields.

    """

    title = SerializerMethodField()

    class Meta:
        model = Notification
        fields = (
            "id",
            "title",
            "status",
            "link",
            "timestamp",
        )

    def get_title(self, notification: Dict[str, Any]) -> str:
        """Generate and return the title for a notification.

        Args:
            notification (Dict[str, Any]): A dictionary representing the notification data,
                typically from a queryset's values().

        Returns:
            str: The generated title for the notification.

        """
        return generate_title(notification)

    def to_representation(self, instance: Dict[str, Any]) -> Dict[str, str]:
        """Convert the instance to a representation format, filtering out empty
        fields.

        Args:
            instance (Dict[str, Any]): A dictionary representing the notification data,
                typically from a queryset's values().

        Returns:
            Dict[str, str]: The filtered representation of the notification data.

        """
        data = super().to_representation(instance)

        if config.exclude_serializer_null_fields:
            return filter_non_empty_fields(data)

        return data
